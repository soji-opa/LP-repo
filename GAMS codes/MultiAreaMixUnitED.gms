$title Multi area mix unit economic Load Dispatch with different strategies

$onText
The multi-area economic dispatch refers to a class of economic dispatch problems in
which there are several interconnected areas. In each area, there are different power
plant technologies and different demand pattern. The aim is to dispatch
different power plants to supply the demand while minimizing the operating costs.
--------------------------------------------------------------------------------
Model type: QCP
--------------------------------------------------------------------------------
Contributed by
Dr. Alireza Soroudi
IEEE Senior Member
Email: alireza.soroudi@gmail.com
We do request that publications derived from the use of the developed GAMS code
explicitly acknowledge that fact by citing
Soroudi, Alireza. Power System Optimization Modeling in GAMS. Springer, 2017.
DOI: doi.org/10.1007/978-3-319-62350-4

Student: Azeez Olasoji

This code has been refactored to suit the student
$offText

*This code declares several sets. The t set contains four elements (t1, t2, t3, and t4).
*The Area set contains three elements (A1, A2, and A3).
*The i set contains ten elements (g1 through g10). The w set contains two elements (w1 and w2).



*This code declares a table called winddata with values for the w1 and w2 variables for each of the t elements.

$onText

-------------------------------------------------
The above code uses the uniform function to generate random values between 0 and 1 for any missing values in the winddata table.
The not operator is used to identify the missing values, and these are replaced with the random values generated by uniform.
The resulting wind parameter contains the original values for the specified time periods and
the randomly generated values for the missing time periods.
The display statement is used to print the resulting parameter values to the GAMS output.

-------------------------------------------------

set t /t1*t24/;
set w /w1,w2/;

table winddata(t,w);
parameter wind(t,w);

winddata(t,w)$(not winddata(t,w)) = uniform(0,1);

wind(t,w) = winddata(t,w);
display wind;


set TIME /t1*t24/;
set WIND /w1, w2/;
table winddata(TIME, WIND) 'Wind Data'
       W1            W2
t1   0.989432703   0.333370337
t2   0.932703003   0.701561065
t3   0.890989898   0.740128558
t4   0.888976418   0.399440448
t5   0.914905454   0.607315883
t6   0.937708560   0.696942142
t7   0.954393737   0.807409407
t8   0.956618465   0.895316804
t24  0.937152390   0.557392100;

parameter wind_generated(TIME, WIND);
wind_generated(TIME, WIND) = uniform(0, 1);

table winddata_updated(TIME, WIND) 'Updated Wind Data'
       W1            W2
t1   wind_generated('t1', 'w1')   wind_generated('t1', 'w2')
t2   wind_generated('t2', 'w1')   wind_generated('t2', 'w2')
t3   wind_generated('t3', 'w1')   wind_generated('t3', 'w2')
t4   wind_generated('t4', 'w1')   wind_generated('t4', 'w2')
t5   wind_generated('t5', 'w1')   wind_generated('t5', 'w2')
t6   wind_generated('t6', 'w1')   wind_generated('t6', 'w2')
t7   wind_generated('t7', 'w1')   wind_generated('t7', 'w2')
t8   wind_generated('t8', 'w1')   wind_generated('t8', 'w2')
t9   wind_generated('t9', 'w1')   wind_generated('t9', 'w2')
t10  wind_generated('t10', 'w1')  wind_generated('t10', 'w2')
t11  wind_generated('t11', 'w1')  wind_generated('t11', 'w2')
t12  wind_generated('t12', 'w1')  wind_generated('t12', 'w2')
t13  wind_generated('t13', 'w1')  wind_generated('t13', 'w2')
t14  wind_generated('t14', 'w1')  wind_generated('t14', 'w2')
t15  wind_generated('t15', 'w1')  wind_generated('t15', 'w2')
t16  wind_generated('t16', 'w1')  wind_generated('t16', 'w2')
t17  wind_generated('t17', 'w1')  wind_generated('t17', 'w2')
t18  wind_generated('t18', 'w1')  wind_generated('t18', 'w2')
t19  wind_generated('t19', 'w1')  wind_generated('t19', 'w2')
t20  wind_generated('t20', 'w1')  wind_generated('t20', 'w2')
t21  wind_generated('t21', 'w1')  wind_generated('t21', 'w2')
t22  wind_generated('


Table winddata(t, w)
    w1                  w2
t1  0.989432703003333   0.333370337051961
t2  0.932703003333704   0.701561065197428
t3  0.89098989887652    0.740128558310376
t4  0.888976418242424   0.39944044864364
t5  0.914905454505045   0.607315883618376
t6  0.937708560654944   0.696942142149421
t7  0.954393737703077   0.807409407314849
t8  0.956618465180466   0.895316804407714
t24 0.937152390319154   0.557392100284658;




set t /t1*t24/;
set w /w1, w2/;

table winddata(t, w);
parameter wind(t, w);

scalar seed /12345/;
option seed=seed;

loop(t$(not winddata(t, 'w1') and not winddata(t, 'w2')),
     wind(t, 'w1') = uniform(0,1);
     wind(t, 'w2') = uniform(0,1);
);

display wind;


The code generates random values for the missing time periods in the winddata table by using a loop over the time set t,
checking for each time period whether the w1 and w2 values are missing in the winddata table.
If a value is missing, it generates a random value between 0 and 1 using the uniform function
and assigns it to the corresponding (time, wind) element in the wind parameter.

Since the t set is defined as t1 to t24, there should be 24 elements in the wind parameter after the loop.
However, the winddata table only contains values for t1 to t8 and t24,
so the loop only generates random values for the missing time periods t9 to t23.
Therefore, there are only 22 randomly generated values in the wind parameter,
and the other two values (t8 and t24) are taken from the winddata table.


In the code you provided, scalar seed /12345/; defines a scalar parameter named seed and assigns the initial value of 12345 to it.

The line option seed=seed; sets the seed value for the random number generator to the value of seed.
In GAMS, the random number generator uses a seed value to produce a sequence of random numbers.
Setting the seed value to a fixed number ensures that the same sequence of random numbers is generated every time the model is run,
which can be useful for testing and debugging.
By assigning a value to seed, you can control the sequence of random numbers that are generated.
$offText
*set time /t1*t24/;
*set area /a1, a2, a3/;

$onText
parameter tmax /24/;


table demand(t, area) 'electricity demand by time and area'
       a1      a2      a3
t1     258     292     237
t2     291     237     289
t3     343     214     299
t4     435     267     371
t5     408     295     393
t6     477     293     406
t7     422     311     369
t8     606     422     555
t9     500     500     500
t10    400     400     400
t24                        ;


*generate random demand for missing time period
loop(tmax+1, t,
     loop(area,
          demand(t, area) = round($random(200,500));
     );
);

display demand;
$offText

Sets t / t1* t24 /, Area / A1, A2, A3 /, i / g1 * g10 /, w / w1, w2 /;

*This code declares a set called AreaGen, which is a subset of the Area set and the i set.
*The first line declares that AreaGen is a set that depends on the area and i sets.
*The next three lines set the values of AreaGen to "yes" or "no" based on the value of the i set.
*The last line creates an alias for the area set, calling it region

set AreaGen (area, i);
AreaGen('A1', i)$(ord(i)<5)=yes;
AreaGen('A2', i)$(ord(i)>4 and ord(i)<8)=yes;
AreaGen('A3', i)$(ord(i)>7)=yes;
alias (area, region);


Table winddata(t, w)
        w1                  w2
t1      0.989432703003333   0.333370337051961
t2      0.932703003333704   0.701561065197428
t3      0.890989898876520   0.740128558310376
t4      0.888976418242424   0.399440448643640
t5      0.914905454505045   0.607315883618376
t6      0.937708560654944   0.696942142149421
t7      0.954393737703077   0.807409407314849
t8      0.956618465180466   0.895316804407714
t9      0.123456789012345   0.987654321098765
t10     0.234567890123456   0.876543210987654
t11     0.345678901234567   0.765432109876543
t12     0.456789012345678   0.654321098765432
t13     0.567890123456789   0.543210987654321
t14     0.678901234567890   0.432109876543210
t15     0.789012345678901   0.321098765432099
t16     0.890123456789012   0.210987654321988
t17     0.901234567890123   0.109876543210877
t18     0.912345678901234   0.008765432109766
t19     0.923456789012345   0.098765432109655
t20     0.934567890123456   0.187654321098544
t21     0.945678901234567   0.276543210987433
t22     0.956789012345678   0.365432109876322
t23     0.967900123456789   0.454321098765211
t24     0.937152390319154   0.557392100284658;



*This code declares a parameter called Windcap with values for w1 and w2

parameter Windcap(w)
/w1 250
w2 350/;

*This code declares a parameter called AreaWind with values for A1 and A3 depending on the value of w.

parameter AreaWind(area, w);
AreaWind('A1', 'w1') = yes;
AreaWind('A3', 'w2') = yes;

*This code declares a table called Tielim with values for each element of the Area set.


table Tielim(area, region)
    a1  a2   a3
a1  0   100  400
a2  100 0    500
a3  400 500  0;

Table gendata(i,*) 'generator cost characteristics and limits'

       a        b       c       Pmin  Pmax    RU    RD
g1     0.0056   17.87   601.75  20    150     40    40
g2     0.0079   21.62   480.29  40    200     80    80
g3     0.0070   23.9    471.6   30    300     100   100
g4     0.0043   21.6    958.2   30    350     120   120
g5     0.0095   22.54   692.4   10    70      30    30
g6     0.0090   19.58   455.6   20    80      40    40
g7     0.0063   21.0    1313.6  40    450     150   150
g8     0.0048   23.63   639.4   50    130     50    50
g9     0.0039   20.81   604.9   7     100     340   100
g10    0.0021   16.51   502.7   40    130     60    60;




table demand(t, area) 'electricity demand by time and area'

        a1          a2          a3
t1      258.000     292.000     237.000
t2      291.000     237.000     289.000
t3      343.000     214.000     299.000
t4      435.000     267.000     371.000
t5      408.000     295.000     393.000
t6      477.000     293.000     406.000
t7      422.000     311.000     369.000
t8      219.000     320.000     232.000
t9      431.000     319.000     374.000
t10     352.000     420.000     347.000
t11     219.000     215.000     498.000
t12     329.000     342.000     450.000
t13     421.000     480.000     443.000
t14     274.000     442.000     290.000
t15     304.000     478.000     224.000
t16     348.000     348.000     492.000
t17     319.000     335.000     380.000
t18     277.000     268.000     306.000
t19     295.000     256.000     285.000
t20     364.000     307.000     233.000
t21     372.000     293.000     250.000
t22     238.000     338.000     250.000
t23     385.000     330.000     456.000
t24     347.000     327.000     444.000;


Variables Tie(area, region, t), OF, p(i,t), pw(w,t);
tie.lo(area, region,t) =-Tielim(area, region);
tie.up(area, region,t) =+Tielim(area, region);
tie.fx(area, region,t)$( Tielim(area, region) = 0 ) =0;
tie.fx(area, region,t) = 0;
pw.lo(w, t) = 0;
p.up(i,t) = gendata(i, 'Pmax');
p.lo(i,t) = gendata(i, 'Pmin');
pw.up(w,t) = winddata (t,w) * Windcap(w);

Equations  tieconst, balance, RampUp, RampDn, cost;

tieconst ( area, region, t ) .. Tie( area, region, t) =e=-Tie( region, area, t );

balance ( area, t ) .. sum (i$AreaGen( area, i ), p (i,t) ) + sum (w$AreaWind ( area, w), Pw (w,t) ) =e=demand ( t, area) + sum ( region, Tie ( area, region, t) );

RampUp ( i, t ) .. p(i,t) - p(i, t-1) =l= gendata ( i, 'RU' );

RampDn (i,t) .. p(i, t-1) - p(i, t)  =l= gendata ( i, 'RD' );

cost .. OF=e= sum( ( i,t), gendata ( i, 'a' ) * p( i, t ) * p( i, t ) + gendata ( i, 'b') * p( i, t ) + gendata ( i , 'c' )) ;

Model mamued /  all / ;

Solve mamued min OF us QCP;

